grammar edu.cmu.sei.eebm.EEBM with org.eclipse.xtext.xbase.Xbase

generate eEBM "http://www.cmu.edu/sei/eebm/EEBM"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types

IntentionalElement: // superclass. Implies Goals and Options are semantically equivalent ...
	Goal | Task | Softgoal
;

Relationship:
	Refinement | Conflict
;

Refinement:
	AndRefinement | OrRefinement
;

AndRefinement returns AndRefinement: 'And' name=QualifiedName
	'[' (
		(source+=[IntentionalElement]+)
		(dest+=[IntentionalElement])
	)
	']'
;

OrRefinement returns OrRefinement: 'Or' name=QualifiedName
	'[' (
		(source+=[IntentionalElement]+)
		(dest+=[IntentionalElement])
	)
	']'
;

Conflict returns Conflict: 'Conflict' name=QualifiedName
	'[' (
		(source+=[IntentionalElement])
		(dest+=[IntentionalElement])
	)
	']'
;

Task returns Task: 'Task' name=QualifiedName (':' title=STRING)? 
    '[' ( 
    	(description=Description)?
      	&('priority' &priority=PriorityEnum)?
      	&('time' time=INT)? //TODO: Validation should implement what an integer time reflects, e.g.seconds, weeks
      	&('cost' cost=INT)?
      	&('benefit' benefit=INT)?
      	&('completion' date=STRING)? //TODO: validate in custom validator
      	&('delay cost' cod=INT)? 
    )
    ']'
;

enum PriorityEnum:
	HIGH | MED | LOW
;

//Goals and requirements

Preference: 
	'prefers(' first=[IntentionalElement] ',' last=[IntentionalElement] ')' //TODO: verify these exist and are not equal
;

//NE: we could just import this from ALISA
Goal returns Goal:
	'Goal' name=QualifiedName (':'  title=STRING )? ("refines" superType=[Goal])? // short string for title
	'['  
	 	(description=Description)? 
	 	&(rationale=Rationale)? 
		//	 &(changeUncertainty=Uncertainty)? 
	 	&('see' 'document'  docReference+=STRING)?  //the document e.g. business strategy
	
	 ']';
	 
//NE: we could just import this from ALISA
Softgoal returns Softgoal:
	'Softgoal' name=QualifiedName (':'  title=STRING )? ("refines" superType=[Softgoal])? // short string for title
	'['  
	 	(description=Description)? 
	 	&(rationale=Rationale)? 
		//	 &(changeUncertainty=Uncertainty)? 
	 	&('see' 'document'  docReference+=STRING)?  //the document e.g. business strategy
	
	 ']';
	 
Description : 
	'description' description += DescriptionElement+
;

DescriptionElement :
 	text = STRING //| showValue = ShowValue |thisTarget?='this'| image=ImageReference
 ;

Rationale: 'rationale' text=STRING ;
