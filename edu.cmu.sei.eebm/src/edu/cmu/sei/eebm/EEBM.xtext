grammar edu.cmu.sei.eebm.EEBM  with org.eclipse.xtext.common.Terminals

generate eEBM "http://www.cmu.edu/sei/eebm/EEBM"

Roadmap: 
	(name = 'Roadmap' STRING)?
	components += (IntentionalElement)*
	relations += (Refinement|Conflict)*
;
IntentionalElement: // superclass. Implies Goals and Options are semantically equivalent ...
	Goal | Task | Softgoal
;

//Relationship:
//	Refinement | Conflict
//;

//TODO: validation rule that defines what can be refined/decomposed.
// E.g. softgoals refine other Sgs, goals refine goals or softgoals, tasks refine either.
//Notice there is little to no semantic difference between them!

Refinement:
	AndRefinement | OrRefinement
;

AndRefinement returns AndRefinement: 'And' name=ID
	'[' (
		('dest' source+=[IntentionalElement])
		&('source' '[' dest+=[IntentionalElement] (',' dest+=[IntentionalElement])* ']')
	)
	']'
;

OrRefinement returns OrRefinement: 'Or' name=ID
	'[' (
		('dest' source=[IntentionalElement])
		&('source' '[' dest+=[IntentionalElement] (',' dest+=[IntentionalElement])* ']')
	)
	']'
;

Conflict returns Conflict: 'Conflict' name=ID
	'[' (
		('dest' source=[IntentionalElement])
		&('source' dest=[IntentionalElement])
	) ']'
;

Goal returns Goal:
	'Goal' name=ID (':'  title=STRING )?  // short string for title
	'['  
	 	(description=Description)? 
	 	&('priority' &priority=PriorityEnum)?
      	&('time' time=INT)? //TODO: Validation should implement what an integer time reflects, e.g.seconds, weeks
      	&('cost' cost=INT)?
      	&('benefit' benefit=INT)?
      	&('completion' date=STRING)? //TODO: validate in custom validator
      	&('delay cost' cod=INT)? 
	 	&(rationale=Rationale)? 
	 	&(ref=Reference)?  
	']';
	 
Softgoal returns Softgoal:
	'Softgoal' name=ID (':'  title=STRING )?  // short string for title
	'['  
	 	(description=Description)? 
	 	&('priority' &priority=PriorityEnum)?
      	//TODO: Validation should implement what an integer time reflects, e.g.seconds, weeks
      	&('time' time=INT)? 
      	&('cost' cost=INT)?
      	&('benefit' benefit=INT)?
      	//TODO: validate in custom validator
      	&('completion' date=STRING)? 
      	&('delay cost' cod=INT)? 
	 	&(rationale=Rationale)? 
	 	&(ref=Reference)?  //the document e.g. business strategy
	 ']';
	 
Task returns Task: 
	'Task' name=ID (':' title=STRING)? 
    '[' 
    	(description=Description)?
      	&('priority' &priority=PriorityEnum)?
      	&('time' time=INT)? //TODO: Validation should implement what an integer time reflects, e.g.seconds, weeks
      	&('cost' cost=INT)?
      	&('benefit' benefit=INT)?
      	&('completion' date=STRING)? //TODO: validate in custom validator
      	&('delay cost' cod=INT)? 
	']';
	 
Description : 'description' text = STRING ;
Rationale: 'rationale' text=STRING ;
Reference: 'see document'  docReference+=STRING;

enum PriorityEnum:	NA | LOW | MED | HIGH; //turns out the 'default' is the first one. 

//TODO: Semantic validation that first/last exist and are not equal
Preference: 
	'prefers(' first=[IntentionalElement] ',' last=[IntentionalElement] ')'; 
